if(CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(X86_64)|(x64)|(X64)|(amd64)|(AMD64)")
    if (APPLE)
        add_definitions(-fno-stack-check) # Workaround a Xcode 11.X bug
    endif()
    add_definitions(-DMNN_USE_SSE)
    FILE(GLOB MNN_X8664_SRC ${CMAKE_CURRENT_LIST_DIR}/*.cpp)
    add_library(MNNX8664 OBJECT ${MNN_X8664_SRC})
    list(APPEND MNN_OBJECTS_TO_LINK $<TARGET_OBJECTS:MNNX8664>)
    list(APPEND MNN_TARGETS MNNX8664)
    IF(MNN_USE_AVX)
      FILE(GLOB MNN_AVX_SRC ${CMAKE_CURRENT_LIST_DIR}/avx/*.cpp)
      add_library(MNNAVX OBJECT ${MNN_AVX_SRC})
      if(WIN32 OR MSVC)
          target_compile_options(MNNAVX PRIVATE /arch:AVX)
      else()
          target_compile_options(MNNAVX PRIVATE -mavx)
      endif()
      add_dependencies(MNNX8664 MNNAVX)
      list(APPEND MNN_OBJECTS_TO_LINK $<TARGET_OBJECTS:MNNAVX>)
      list(APPEND MNN_TARGETS MNNAVX)
    ENDIF()
    IF(MNN_USE_SSE)
      FILE(GLOB MNN_SSE_SRC ${CMAKE_CURRENT_LIST_DIR}/sse/*.cpp)
      add_library(MNNSSE OBJECT ${MNN_SSE_SRC})
      add_dependencies(MNNX8664 MNNSSE)
      list(APPEND MNN_OBJECTS_TO_LINK $<TARGET_OBJECTS:MNNSSE>)
      list(APPEND MNN_TARGETS MNNSSE)
    ENDIF()
    SET(MNN_OBJECTS_TO_LINK "${MNN_OBJECTS_TO_LINK}" PARENT_SCOPE)
    SET(MNN_TARGETS "${MNN_TARGETS}" PARENT_SCOPE)
endif()
